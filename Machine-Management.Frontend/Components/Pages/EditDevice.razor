@page "/editDevice"
@page "/editDevice/{id:int}"

@inject NavigationManager NavigationManager
@inject DeviceClient Client
@rendermode InteractiveServer


<PageTitle>Edit Device</PageTitle>

<h3>Edit Device</h3>

@if (loading)
{
    <p><em>Loading...</em></p>
}

else if (deviceNotFound)
{
    <p><em>Not found</em></p>
}

else
{
    <div class="row">
        <div class="col-md-4">
            <EditForm Model="@device" FormName="editDevice" OnValidSubmit="HandleSubmit">

                <div class="mb-3">
                    <label for="name" class="form-label">Name: </label>
                    <InputText id="name" @bind-Value="device.Name" class="form-control" />
                </div>

                <div class="mb-3">
                    <label for="status" class="form-label">Genre: </label>
                    <InputSelect id="status" @bind-Value="device.Status" class="form-select">
                        <option value="">Select a status</option>
                        <option value="true">True</option>
                        <option value="false">False</option>

                    </InputSelect>
                </div>

                <div class="mb-3">
                    <label for="date" class="form-label">Date: </label>
                    <InputDate id="date" @bind-Value="device.Date" class="form-control" />
                </div>

                <button type="submit" class="btn btn-primary">Save</button>
                <a href="/dashboard" role="button" class="btn btn-secondary">Cancel</a>
            </EditForm>
        </div>
    </div>

}

@code {
    private bool deviceNotFound = false;
    private bool loading = true;

    [SupplyParameterFromForm]
    private Device? device { get; set; }

    [Parameter]
    public int? Id { get; set; }

    protected override void OnParametersSet()
    {
        if(device is not null)
        {
            return;
        }

        if(Id is not null)
        {
            try
            {
                device = Client.GetDevice(Id.Value);
            }

            catch (ArgumentNullException)
            {
                deviceNotFound = true;
            }
        }

        else
        {
            device = new Device()
            {
                Name = string.Empty,
                Date = DateOnly.FromDateTime(DateTime.UtcNow),
            };
        }

        loading = false;
    }

    private void HandleSubmit()
    {
        ArgumentNullException.ThrowIfNull(device);

        if(Id is null)
        {
            Client.AddDevice(device);
        }

        else
        {
            device.Id = Id.Value;
            Client.UpdateDevice(device);
        }

        NavigationManager.NavigateTo("/dashboard");
    }

}
