@page "/details/{id:int}"

@inject NavigationManager NavigationManager
@inject IDeviceService DeviceService
@rendermode InteractiveServer

<PageTitle>Details</PageTitle>


@if (device == null)
{
    <p class="mt-5"><em>Device not available</em></p>
    <a href="/dashboard" role="button" class="btn btn-secondary mt-3">Return back</a>
}

else
{
    <h3 class="mt-3">Details</h3>

    <div class="row">
        <div class="col-md-4">
            <div class="mb-3">
                <label for="name" class="form-label"><strong>Name:</strong> @device.Name</label>
            </div>

            <div class="mb-3">
                <label for="status" class="form-label"><strong>Status: </strong> @device.Status </label>
            </div>

            <div class="mb-3">
                <label for="date" class="form-label"><strong>Date: </strong> @device.Date.ToShortDateString() </label>
            </div>

            <div class="d-flex">
                <a href="@AddItemUrl(device.Id)" role="button" class="btn btn-primary me-2">Add Item</a>
                <a href="/dashboard" role="button" class="btn btn-secondary">Return back</a>
            </div>
        </div>
    </div>

    <h3 class="mt-3">Items</h3>
    <div class="row">
        @if (device.Items == null || !device.Items.Any())
        {
            <p>Empty List</p>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">Id</th>
                        <th scope="col">Name</th>
                        <th scope="col">Price</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in device.Items)
                    {
                        <tr>
                            <th scope="row">@item.Id</th>
                            <td>@item.Name</td>
                            <td>@item.Price</td>
                            <th>
                                <div class="d-flex">
                                    <a class="btn btn-primary me-2" role="button" href="@EditItemUrl(device.Id, item.Id)">
                                        <i class="bi bi-pencil"></i>
                                    </a>
                                </div>
                            </th>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
}


@code {

    [Parameter]
    public int? Id { get; set; }

    public Device? device { get; set; }

    private static string AddItemUrl(int id) => $"/details/{id}/editItem";
    private static string EditItemUrl(int id, int itemId) => $"/details/{id}/editItem/{itemId}";


    // private string GetDeleteModalId(Item item)
    // {
    //     return $"#{DeleteItem.GetModalId(item)}";
    // }

    protected override async Task OnParametersSetAsync()
    {
        if (Id != null)
        {
            try
            {
                device = await DeviceService.GetDeviceAsync(Id.Value);
            }
        
            catch (Exception ex)
            {
                Console.WriteLine($"Error fetching device details: {ex.Message}");
                device = null;
            }
        }

        else
        {
            device = null;
            NavigationManager.NavigateTo("/dashboard", true);
        }
    }

}
